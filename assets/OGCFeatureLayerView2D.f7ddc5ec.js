import{aH as r,aI as a,aJ as o}from"./index.c336f1d1.js";import s from"./FeatureLayerView2D.a1865bf5.js";import"./utils.c90d85ee.js";import"./Utils.b158d4c8.js";import"./Texture.30d3a7ff.js";import"./MaterialKey.8837b9b3.js";import"./LayerView.63c64603.js";import"./schemaUtils.fa86d662.js";import"./visualVariablesUtils.d79449da.js";import"./createSymbolSchema.643d9bd4.js";import"./CIMSymbolHelper.16d189b4.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.13d239de.js";import"./quantizationUtils.3fed5db8.js";import"./MD5.97b39efc.js";import"./util.7e1b0b40.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.e7058401.js";import"./RefreshableLayerView.86d39a02.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
