import{aH as r,aI as a,aJ as o}from"./index.1a5fb9f8.js";import s from"./FeatureLayerView2D.d056ca70.js";import"./utils.242b0c38.js";import"./Utils.7e586b91.js";import"./Texture.9216ba12.js";import"./MaterialKey.95191748.js";import"./LayerView.3d3bb1c0.js";import"./schemaUtils.f285abe4.js";import"./visualVariablesUtils.215cc29a.js";import"./createSymbolSchema.02fa476b.js";import"./CIMSymbolHelper.eda82282.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.46eebf62.js";import"./quantizationUtils.ba1c8aab.js";import"./MD5.97b39efc.js";import"./util.5e56ca8b.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.47c8dd5f.js";import"./RefreshableLayerView.e174c79f.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
