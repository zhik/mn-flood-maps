import{aH as r,aI as a,aJ as o}from"./index.f8410d2d.js";import s from"./FeatureLayerView2D.53eeb304.js";import"./utils.a65c5851.js";import"./Utils.0ab6f103.js";import"./Texture.844ef494.js";import"./MaterialKey.b7fdbca1.js";import"./LayerView.4861daef.js";import"./schemaUtils.9ce7d0b0.js";import"./visualVariablesUtils.621fe5a7.js";import"./createSymbolSchema.9a1cf635.js";import"./CIMSymbolHelper.84301d85.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.d134bf8e.js";import"./quantizationUtils.37e0ea7c.js";import"./MD5.97b39efc.js";import"./util.b474ae16.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.233e3cd7.js";import"./RefreshableLayerView.c5c83f5d.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
