import{aH as r,aI as a,aJ as o}from"./index.8f6b05c6.js";import s from"./FeatureLayerView2D.94169aa1.js";import"./utils.663d360f.js";import"./Utils.a0879712.js";import"./Texture.ed203328.js";import"./MaterialKey.6740249b.js";import"./LayerView.828c790c.js";import"./schemaUtils.232ca87f.js";import"./visualVariablesUtils.162999a1.js";import"./createSymbolSchema.318ee212.js";import"./CIMSymbolHelper.8907f61e.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.01b4a98f.js";import"./quantizationUtils.9a4c2768.js";import"./MD5.97b39efc.js";import"./util.5022b0bd.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.aae116b5.js";import"./RefreshableLayerView.947aded7.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
