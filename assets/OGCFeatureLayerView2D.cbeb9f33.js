import{aH as r,aI as a,aJ as o}from"./index.769151e2.js";import s from"./FeatureLayerView2D.d0e09854.js";import"./utils.43e9b114.js";import"./Utils.58433441.js";import"./Texture.8ade5b67.js";import"./MaterialKey.d718a93c.js";import"./LayerView.425c6f0a.js";import"./schemaUtils.f69971da.js";import"./visualVariablesUtils.5827ade9.js";import"./createSymbolSchema.508b39cc.js";import"./CIMSymbolHelper.14404b68.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.8ab699f6.js";import"./quantizationUtils.6f378d99.js";import"./MD5.97b39efc.js";import"./util.1317ca7c.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.24a7b491.js";import"./RefreshableLayerView.2d315b19.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
