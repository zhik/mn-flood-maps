import{f$ as N,b5 as C,aQ as S,m as R,eF as A,bt as B,X as O,g0 as j,g1 as k}from"./index.b82fad90.js";import{O as q}from"./quantizationUtils.504677c0.js";import{T as G,s as Y,m as _,c as Q,V as U,g as X,h as Z,y as H,D as J,z as K}from"./utils.b988e9ba.js";import"./ClassBreaksDefinition.7a4f2265.js";let I=null;function L(n,a,l){return n.x<0?n.x+=a:n.x>l&&(n.x-=a),n}function W(n,a,l,t){const i=N(l)?C(l):null,r=i?Math.round((i.valid[1]-i.valid[0])/a.scale[0]):null;return n.map(s=>{const e=new S(R(s.geometry));return q(a,e,e,e.hasZ,e.hasM),s.geometry=i?L(e,r,t[0]):e,s})}function aa(n,a=18,l,t,i,r){const s=new Float64Array(i*r);a=Math.round(O(a));let e=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,m=0,u=0,d=0,f=0;const c=j(t,l);for(const{geometry:v,attributes:z}of n){const{x:y,y:w}=v,g=Math.max(0,y-a),E=Math.max(0,w-a),M=Math.min(r,w+a),$=Math.min(i,y+a),P=+c(z);for(let x=E;x<M;x++)for(let T=g;T<$;T++){const V=x*i+T,b=k(T-y,x-w,a),D=s[V];m=s[V]+=b*P;const F=m-D;u+=F,d+=F*F,m<e&&(e=m),m>o&&(o=m),f++}}if(!f)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const p=(o-e)/2;return{mean:u/f,stdDev:Math.sqrt((d-u*u/f)/f),min:e,max:o,mid:p,count:f}}async function h(n,a){if(!a)return[];const l=n.field,t=n.valueExpression,i=n.normalizationType,r=n.normalizationField,s=n.normalizationTotal,e=[],o=n.viewInfoParams;let m=null,u=null;if(t){if(!I){const{arcadeUtils:c}=await A();I=c}m=I.createFunction(t),u=o&&I.getViewInfo({viewingMode:o.viewingMode,scale:o.scale,spatialReference:new B(o.spatialReference)})}const d=n.fieldInfos,f=!(a[0]&&"declaredClass"in a[0]&&a[0].declaredClass==="esri.Graphic")&&d?{fields:d}:null;return a.forEach(c=>{const p=c.attributes;let v;if(t){const z=f?{...c,layer:f}:c,y=I.createExecContext(z,u);v=I.executeFunction(m,y)}else p&&(v=p[l]);if(i&&isFinite(v)){const z=p&&parseFloat(p[r]);v=G(v,i,z,s)}e.push(v)}),e}async function oa(n){const{attribute:a,features:l}=n,{normalizationType:t,normalizationField:i,minValue:r,maxValue:s,fieldType:e}=a,o=await h({field:a.field,valueExpression:a.valueExpression,normalizationType:t,normalizationField:i,normalizationTotal:a.normalizationTotal,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),m=Y({normalizationType:t,normalizationField:i,minValue:r,maxValue:s}),u={value:.5,fieldType:e},d=e==="esriFieldTypeString"?_({values:o,supportsNullCount:m,percentileParams:u}):Q({values:o,minValue:r,maxValue:s,useSampleStdDev:!t,supportsNullCount:m,percentileParams:u});return U(d,e==="esriFieldTypeDate")}async function sa(n){const{attribute:a,features:l}=n,t=await h({field:a.field,valueExpression:a.valueExpression,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),i=X(t);return Z(i,a.domain,a.returnAllCodedValues)}async function la(n){const{attribute:a,features:l}=n,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e}=a,o=await h({field:t,valueExpression:a.valueExpression,normalizationType:i,normalizationField:r,normalizationTotal:s,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),m=H(o,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e,standardDeviationInterval:a.standardDeviationInterval,numClasses:a.numClasses,minValue:a.minValue,maxValue:a.maxValue});return J(m,e)}async function ra(n){const{attribute:a,features:l}=n,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e}=a,o=await h({field:t,valueExpression:a.valueExpression,normalizationType:i,normalizationField:r,normalizationTotal:s,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l);return K(o,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e,standardDeviationInterval:a.standardDeviationInterval,numBins:a.numBins,minValue:a.minValue,maxValue:a.maxValue})}async function ma(n){const{attribute:a,features:l}=n,{field:t,radius:i,fieldOffset:r,transform:s,spatialReference:e,size:o}=a,m=W(l,s,e,o),{count:u,min:d,max:f,mean:c,stdDev:p}=aa(m,i,r,t,o[0],o[1]);return{count:u,min:d,max:f,avg:c,stddev:p}}export{la as classBreaks,ma as heatmapStatistics,ra as histogram,oa as summaryStatistics,sa as uniqueValues};
