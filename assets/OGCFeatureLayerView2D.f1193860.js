import{aH as r,aI as a,aJ as o}from"./index.a507000d.js";import s from"./FeatureLayerView2D.5879ea80.js";import"./utils.f2405ec6.js";import"./Utils.14a63c02.js";import"./Texture.81b89f13.js";import"./MaterialKey.32883fb9.js";import"./LayerView.f6f34656.js";import"./schemaUtils.2e875bb9.js";import"./visualVariablesUtils.49cccbc0.js";import"./createSymbolSchema.80d4b962.js";import"./CIMSymbolHelper.aa550d72.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.d35cd80c.js";import"./quantizationUtils.66eb0a03.js";import"./MD5.97b39efc.js";import"./util.4c384b18.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.48943d03.js";import"./RefreshableLayerView.268ae052.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
