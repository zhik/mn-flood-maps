import{aH as r,aI as a,aJ as o}from"./index.2fb7ef6a.js";import s from"./FeatureLayerView2D.0971c20e.js";import"./utils.217b4b09.js";import"./Utils.e64a5571.js";import"./Texture.98352e75.js";import"./MaterialKey.69438a9a.js";import"./LayerView.e052c812.js";import"./schemaUtils.3aebc0ac.js";import"./visualVariablesUtils.ddaf700f.js";import"./createSymbolSchema.fdef7cc6.js";import"./CIMSymbolHelper.b7d3a9d9.js";import"./BidiEngine.ec67919b.js";import"./ExpandedCIM.b41be5ca.js";import"./quantizationUtils.72a52acc.js";import"./MD5.97b39efc.js";import"./util.5be14c14.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.330da791.js";import"./RefreshableLayerView.375d4355.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends l(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
